<?php

/**
 * @file
 * Main code.
 */

/**
 * Get count statistic for url.
 *
 * @param $url
 * @param array $networks Can be: twitter, facebook, plusone, vkontakte,
 *                        mailru, odnoklassniki, pinterest.
 * @return array
 */
function sharekit_get_counts($url, $networks) {
  $sharekit = new ShareKit();
  $networks_array = explode(',', str_replace(' ', '', $networks));

  return $sharekit->getCount($url, $networks_array);
}

/**
 * Implements hook_theme().
 */
function sharekit_theme() {
  $path = drupal_get_path('module', 'sharekit') . '/theme';

  return array(
    'sharekit' => array(
      'variables' => array(
        'share_url' => NULL,
        'share_title' => NULL,
        'label' => NULL,
        'popup_width' => NULL,
        'popup_height' => NULL,
      ),
      'template' => 'sharekit',
      'pattern' => 'sharekit__',
      'path' => $path,
    ),
    'sharekit_multiple' => array(
      'variables' => array(
        'share_url' => NULL,
        'share_title' => NULL,
        'label' => NULL,
        'popup_width' => NULL,
        'popup_height' => NULL,
      ),
      'template' => 'sharekit-multiple',
      'pattern' => 'sharekit_multiple__',
      'path' => $path,
    )
  );
}

/**
 * Get buttons multiple.
 *
 * @param $networks
 * @param null $style
 * @param array $options
 * @return string
 * @throws \Exception
 */
function sharekit_buttons($networks, $style = NULL, $options = array()) {
  $result = '';
  $options['style'] = $style;
  $type = isset($options['type']) ? $options['type'] : 'single';

  $networks_array = explode(',', str_replace(' ', '', $networks));

  if ($type == 'single') {
    foreach ($networks_array as $key => $network) {
      $options['network'] = $network;

      $suggestions = array();
      if ($style) {
        $suggestions[] = 'sharekit__' . $network . '__' . $style;
        $suggestions[] = 'sharekit__' . $style;
      }
      $suggestions[] = 'sharekit__' . $network;
      $suggestions[] = 'sharekit';

      $result .= theme($suggestions, $options);
    }
  }
  elseif ($type == 'multiple') {
    $options['networks'] = $networks_array;
    $suggestions = array();
    if ($style) {
      $suggestions[] = 'sharekit_multiple__' . $style;
    }
    $suggestions[] = 'sharekit_multiple';

    $result .= theme($suggestions, $options);
  }

  return $result;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function template_preprocess_sharekit(&$variables) {
  // Set default values.
  global $base_url;
  $variables['share_url'] === NULL ? $variables['share_url'] = $base_url . '/' . request_path() : FALSE;
  $variables['share_title'] === NULL ? $variables['share_title'] = drupal_get_title() : FALSE;
  $variables['label'] === NULL ? $variables['label'] = t('Share') : FALSE;
  $variables['popup_width'] === NULL ? $variables['popup_width'] = 600 : FALSE;
  $variables['popup_height'] === NULL ? $variables['popup_height'] = 450 : FALSE;
  $variables['classes_array'][] = $variables['network'];
  $variables['style'] != NULL ? $variables['classes_array'][] = $variables['style'] : $variables['classes_array'][] = 'default';

  // Variable for marking element as clickable for popup call.
  $variables['clickable'] = drupal_attributes(array(
    'data-popup' => 'true'
  ));

  // Get current share count.
  $sharekit = new sharekit();
  $count = $sharekit->getCount($variables['share_url'], array($variables['network']));
  $variables['share_count'] = $count[$variables['network']];

  // Add styles only for default style.
  if ($variables['style'] == NULL) {
    drupal_add_css(drupal_get_path('module', 'sharekit') . '/css/sharekit.css');
  }

  drupal_add_js(drupal_get_path('module', 'sharekit') . '/js/sharekit.js');
}

/**
 * Implements hook_process_hook
 */
function template_process_sharekit(&$variables) {
  $variables['attributes'] = drupal_attributes(array(
    'data-social-network' => $variables['network'],
    'data-share-url' => $variables['share_url'],
    'data-share-title' => $variables['share_title'],
    'data-popup-width' => $variables['popup_width'],
    'data-popup-height' => $variables['popup_height'],
  ));
}

/**
 * Implements hook_preprocess_HOOK().
 */
function template_preprocess_sharekit_multiple(&$variables) {
  global $base_url;
  dpm($variables);
  $variables['share_url'] === NULL ? $variables['share_url'] = $base_url . '/' . request_path() : FALSE;
  $variables['share_title'] === NULL ? $variables['share_title'] = drupal_get_title() : FALSE;
  $variables['label'] === NULL ? $variables['label'] = t('Share') : FALSE;
  $variables['popup_width'] === NULL ? $variables['popup_width'] = 600 : FALSE;
  $variables['popup_height'] === NULL ? $variables['popup_height'] = 450 : FALSE;
  $variables['classes_array'][] = 'multiple';
  $variables['style'] != NULL ? $variables['classes_array'][] = $variables['style'] : $variables['classes_array'][] = 'default';
  
  // Variable for marking element as clickable for popup call.
  $variables['clickable'] = drupal_attributes(array(
    'data-popup' => 'true'
  ));

  // Get current share count.
  $sharekit = new sharekit();
  $variables['share_count'] = array();
  $variables['share_count_total'] = 0;
  foreach ($variables['networks'] as $network) {
    $count = $sharekit->getCount($variables['share_url'], array($network));
    $variables['share_count'][$network] = $count;
    // @TODO sum
    $variables['share_count_total'] = $count;
  }

  // Add styles only for default style.
  if ($variables['style'] == NULL) {
    drupal_add_css(drupal_get_path('module', 'sharekit') . '/css/sharekit.css');
  }

  drupal_add_js(drupal_get_path('module', 'sharekit') . '/js/sharekit.js');
}
